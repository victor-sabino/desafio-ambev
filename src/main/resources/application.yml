
server:
  port: 8080

spring:
  application:
    name: order-service
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://root:root@localhost:27017/orderdb?authSource=admin}
  threads:
    virtual:
      enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      probes:
        enabled: true

logging:
  level:
    root: INFO

app:
  external-a:
    base-url: ${EXTERNAL_A_URL:http://localhost:8081}
    timeout-ms: 3000
  external-b:
    base-url: ${EXTERNAL_B_URL:http://localhost:8082}
    timeout-ms: 3000

resilience4j:
  circuitbreaker:
    instances:
      externalA:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
      externalB:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 20
        minimumNumberOfCalls: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
  retry:
    instances:
      externalA:
        maxAttempts: 3
        waitDuration: 300ms
      externalB:
        maxAttempts: 5
        waitDuration: 500ms
  ratelimiter:
    instances:
      exportB:
        limitForPeriod: 100
        limitRefreshPeriod: 10s
        timeoutDuration: 0
  timelimiter:
    instances:
      externalA:
        timeoutDuration: 3s
      externalB:
        timeoutDuration: 3s
